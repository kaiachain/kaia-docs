name: klaytn-docs-docusaurus prod deploy workflow
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: deploy
    permissions:
      id-token: write
      contents: read
    runs-on: kaia-xlarge-runner

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Cache the external optimized images and JSON cache file
      - name: Cache image optimization artifacts
        id: image-optimization-cache
        uses: actions/cache@v4
        with:
          path: |
            .optimized-images
            .image-optimization-cache.json
          # Key based on source images content to detect changes
          key: ${{ runner.os }}-image-optimization-${{ hashFiles('static/img/**/*.{png,jpg,jpeg,gif,PNG,JPG,JPEG,GIF}') }}
          restore-keys: |
            ${{ runner.os }}-image-optimization-

      - name: Get AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_PROD }}
          role-session-name: SessionForKlaytnActions
          aws-region: ${{ secrets.AWS_REGION_PROD }}

      - name: Installing Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'

      - name: Installing dependencies
        run: npm ci

      - name: Clone kaia-sdk
        run: |
          git clone -b dev https://github.com/kaiachain/kaia-sdk.git
          cd kaia-sdk/documentation && npm install && cd -

      - name: Generate .mdx files
        env:
          RPC_SPEC_DIR: ../../web3rpc/yaml
          NODE_OPTIONS: --max-old-space-size=8192
        run: |
          cd kaia-sdk/documentation && bash generate-docs.sh split && cd -
          cd web3rpc && bash -x web3rpc.sh && cd - && exit 0

      - name: Build static files with image optimization
        env:
          NODE_OPTIONS: --max-old-space-size=8192
        run: npm run build

      - name: Sync to S3 bucket and validation cloudfront
        env:
          S3_BUCKET_PROD: ${{ secrets.S3_BUCKET_PROD }}
          CLOUDFRONT_ID_PROD: ${{ secrets.CLOUDFRONT_ID_PROD }}
        run: |
          aws s3 sync ./build/ $S3_BUCKET_PROD --delete
          aws s3 cp llms.txt $S3_BUCKET_PROD
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID_PROD --paths "/*"